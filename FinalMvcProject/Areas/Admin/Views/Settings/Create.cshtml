@model FinalMvcProject.Models.Setting

@{
    ViewBag.Title = "Create";
}
<div class="container-fluid">
    <h2>Create Setting</h2>
    <form method="post" enctype="multipart/form-data">
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.HeaderLogo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.HeaderUpload, new { @class = "form-control", @type = "file" })
                    @Html.ValidationMessageFor(model => model.HeaderUpload, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.FooterLogo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.FooterUpload, new { @class = "form-control", @type = "file" })
                    @Html.ValidationMessageFor(model => model.FooterUpload, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AboutImage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.ImageUpload, new { @class = "form-control", @type = "file" })
                    @Html.ValidationMessageFor(model => model.ImageUpload, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AboutBody, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <textarea name="AboutBody" id="AboutBody" class="form-control"> </textarea>
                    @Html.ValidationMessageFor(model => model.AboutBody, "", new { @class = "text-danger" })
                    <script>
                        CKEDITOR.replace('AboutBody');
                    </script>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-12">
                    <input type="submit" value="Add Setting" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </form>
    <div>
    </div>
</div>

@section head{

    <script src="https://cdn.ckeditor.com/4.13.0/standard/ckeditor.js"></script>
}